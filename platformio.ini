[platformio]
extra_configs = 
  factory_settings.ini
  features.ini
default_envs = esp12e
;default_envs = node32s

[env]
build_flags=
  ; -std=gnu++17 -Og -ggdb
  ${factory_settings.build_flags}
  ${features.build_flags}
  -D NO_GLOBAL_ARDUINOOTA
  ; Uncomment PROGMEM_WWW to enable the storage of the WWW data in PROGMEM
  -D PROGMEM_WWW
  ; Uncomment to configure Cross-Origin Resource Sharing
  ;-D ENABLE_CORS
  ;-D CORS_ORIGIN=\"*\"

; ensure transitive dependencies are included for correct platforms only
lib_compat_mode = strict

; Uncomment & modify the lines below in order to configure OTA updates
;upload_flags = 
;  --port=8266 
;  --auth=esp-react
;upload_port = 192.168.0.11  
;upload_protocol = espota

framework = arduino
monitor_speed = 115200

extra_scripts = 
 pre:scripts/build_interface.py

lib_deps =
  bblanchon/ArduinoJson@>=6.0.0,<7.0.0
  mathieucarbou/AsyncTCP @ 3.3.2
  mathieucarbou/ESPAsyncWebServer @ 3.6.0
  AsyncMqttClient@>=0.9.0,<1.0.0
  WiFiClientSecure
  https://github.com/saniyo/Universal-Arduino-Telegram-Bot
  signetica/SunRise @ 2.0.4
  
lib_ignore = 
  ESPAsyncTCP

[env:esp12e]
platform = espressif8266
board = esp12e
board_build.f_cpu = 160000000L
board_build.filesystem = littlefs

[env:node32s]
; Comment out min_spiffs.csv setting if disabling PROGMEM_WWW with ESP32
board_build.partitions = min_spiffs.csv
platform = espressif32
board = node32s
board_build.filesystem = littlefs

[env:esp32-s3-devkitc-1]
platform = espressif32@6.1.0
board = esp32-s3-devkitc-1
board_upload.flash_size = 16MB
;board_build.partitions = default_16MB.csv
board_build.filesystem = littlefs
build_flags = 
	-DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	-DCORE_DEBUG_LEVEL=5
  ${factory_settings.build_flags}
  ${features.build_flags}
  -D NO_GLOBAL_ARDUINOOTA
  ; Uncomment PROGMEM_WWW to enable the storage of the WWW data in PROGMEM
  -D PROGMEM_WWW
  ; Uncomment to configure Cross-Origin Resource Sharing
  ;-D ENABLE_CORS
  ;-D CORS_ORIGIN=\"*\"
  
board_build.arduino.memory_type = qio_opi

[env:esp32-c3-devkitm-1]
platform = espressif32@6.3.0
board = esp32-c3-devkitm-1
board_build.flash_mode = dio
board_build.partitions = min_spiffs.csv
board_build.filesystem = littlefs
build_flags = 
  -std=gnu++17 -Og -ggdb
	-DCORE_DEBUG_LEVEL=5
  ${factory_settings.build_flags}
  ${features.build_flags}
  -D NO_GLOBAL_ARDUINOOTA
  ; Uncomment PROGMEM_WWW to enable the storage of the WWW data in PROGMEM
  -D PROGMEM_WWW
  ; Uncomment to configure Cross-Origin Resource Sharing
  ;-D ENABLE_CORS
  ;-D CORS_ORIGIN=\"*\"
debug_tool = esp-builtin

[env:esp32-c6-devkitc-1]
platform = https://github.com/Jason2866/platform-espressif32.git#Arduino/IDF5
board = esp32-c6-devkitc-1
framework = arduino
monitor_speed = 115200
build_flags =
  -DARDUINO_USB_MODE=1
  -DARDUINO_USB_CDC_ON_BOOT=1
	-DCORE_DEBUG_LEVEL=5
  ${factory_settings.build_flags}
  ${features.build_flags}
  -D NO_GLOBAL_ARDUINOOTA
  -D PROGMEM_WWW
board_build.partitions = min_spiffs.csv
board_build.filesystem = littlefs

upload_speed = 921600
upload_protocol = esptool
monitor_filters = esp32_exception_decoder